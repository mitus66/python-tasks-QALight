'''
Пошук спільних символів з однаковою частотою у двох рядках

Опис: Написати код на Python, який знаходить і повертає список символів, які зустрічаються в двох заданих рядках однакову кількість разів. Важливо, що регістр символів не має бути врахованим, тобто 'A' і 'a' вважаються однаковими. У списку повинні бути тільки ті символи, які зустрічаються в обох рядках, і він має бути відсортований за алфавітом.

Вимоги до реалізації:

Переконайтесь, що ви порівнюєте символи без урахування регістра.
Використовуйте словники (dict) для підрахунку частоти кожного символу в обох рядках.
Складіть список символів, які задовольняють умову завдання.
Відсортуйте цей список перед виведенням.
Приклади:

Дано рядки str1 = "aabbcc" і str2 = "abbcc". Код має вивести ['b', 'c'], оскільки символ 'b' зустрічається в обох рядках по 2 рази, і символ 'c' також зустрічається по 2 рази.

Дано рядки str1 = "Hello, World!" і str2 = "world: hello!". Код має вивести [' ', '!', 'd', 'e', 'h', 'l', 'o', 'r', 'w'], оскільки ці символи зустрічаються в обох рядках однакову кількість разів, якщо не враховувати регістр.

Підказка: Можна використовувати методи .lower() або .upper() для приведення рядків до одного регістру і метод sorted() для сортування списку.

Спробуйте скласти код, слідуючи цим вказівкам.
'''
def find_common_characters(str1, str2):
  """
  Функція знаходить і повертає список символів, які зустрічаються в двох заданих рядках однакову кількість разів, без урахування регістру.

  Args:
      str1 (str): Перший рядок.
      str2 (str): Другий рядок.

  Returns:
      list: Список спільних символів, відсортований за алфавітом.
  """
  # Перетворюємо рядки в нижній регістр для порівняння без урахування регістру.
  lower_str1 = str1.lower()
  lower_str2 = str2.lower()

  # Створимо словники для підрахунку частоти символів.
  char_counts_str1 = {}
  char_counts_str2 = {}
  for char in lower_str1:
    char_counts_str1[char] = char_counts_str1.get(char, 0) + 1
  for char in lower_str2:
    char_counts_str2[char] = char_counts_str2.get(char, 0) + 1

  # Знайдемо спільні символи з однаковою частотою.
  common_chars = []
  for char, count in char_counts_str1.items():
    if char in char_counts_str2 and char_counts_str2[char] == count:
      common_chars.append(char)

  # Відсортуємо список спільних символів.
  return sorted(common_chars)


# Приклади використання
str1 = "aabbcc"
str2 = "abbcc"
print(find_common_characters(str1, str2))  # ['b', 'c']

str1 = "Hello, World!"
str2 = "world: hello!"
print(find_common_characters(str1, str2))  # [' ', '!', 'd', 'e', 'h', 'l', 'o', 'r', 'w']

'''
Рішення хороше. Як варінт можна використати ф-ю Counter(from collections import Counter), ми її розглядали на лекції, рішення буде більш лаконічним.
'''